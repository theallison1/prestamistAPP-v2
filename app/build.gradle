plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services' version '4.4.2' apply false
    id 'com.google.firebase.crashlytics'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'com.google.devtools.ksp' version '2.0.20-1.0.25'
    id 'androidx.navigation.safeargs.kotlin'  apply false // Cambiado
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withInputStream { stream ->
        localProperties.load(stream)
    }
}

def resendApiKey = localProperties.getProperty('RESEND_API_KEY')

android {
    compileSdk 35

    defaultConfig {
        applicationId "com.paparazziapps.pretamistapp"
        minSdk 26
        targetSdk 34
        multiDexEnabled true
        versionCode 9
        versionName "5.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            firebaseCrashlytics {
                nativeSymbolUploadEnabled true
                strippedNativeLibsDir 'build/intermediates/stripped_native_libs/release/out/lib'
                unstrippedNativeLibsDir 'build/intermediates/merged_native_libs/release/out/lib'
            }
            buildConfigField("String", "RESEND_API_KEY", "\"$resendApiKey\"")
        }

        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "RESEND_API_KEY", "\"$resendApiKey\"")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    viewBinding {
        enabled = true
    }

    buildFeatures {
        buildConfig = true
        flavorDimensions = ["version"]
    }

    productFlavors {
        free {
            dimension "version"
        }
        dev {
            dimension "version"
        }
    }

    namespace 'com.paparazziapps.pretamistapp'
    buildToolsVersion '35.0.0'
}

dependencies {
    // AndroidX Core
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:33.12.0')
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-database-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Lifecycle
    def lifecycle_version = "2.8.7"
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // Navigation
    def nav_version = '2.8.9'
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")
    implementation("androidx.navigation:navigation-dynamic-features-fragment:$nav_version")
    androidTestImplementation("androidx.navigation:navigation-testing:$nav_version")
    implementation("androidx.navigation:navigation-compose:$nav_version")

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Other dependencies
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.8.1'
    implementation 'com.wdullaer:materialdatetimepicker:4.2.3'
    implementation 'androidx.multidex:multidex:2.0.1'

    // Koin
    def koin_version = '4.0.4'
    implementation("io.insert-koin:koin-android:$koin_version")

    // Lottie
    def lottieVersion = '6.6.6'
    implementation "com.airbnb.android:lottie:$lottieVersion"

    // Retrofit
    def retrofit_version = "2.11.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
}
// Aplicar el plugin de safeargs despu√©s de los plugins principales
apply plugin: 'androidx.navigation.safeargs.kotlin'